---
import HeroImageCard from "./hero-image-card.astro";
import CtaButton from "./cta-button.astro";
---

<main
  id="hero"
  class="container-grid h-[100svh] w-full sticky top-0 overflow-hidden"
>
  <div class="pt-32 flex flex-col relative z-10 gap-8 col-start-2 col-span-4">
    <h1 class="heading-1 inline-block animated-heading">
      A <span class="composition mx-3">Collaborative</span>
      Circle <br /> for All Remote Workers <br /> in <span
        class="composition mx-3">Pontianak</span
      >
    </h1>
    <CtaButton />
  </div>
  <div class="absolute inset-0 container-grid items-end">
    <HeroImageCard />
  </div>
</main>
<script>
  import { gsap } from "gsap";

  function wrapWordsInSpans(element) {
    // Process text nodes only, preserving existing spans
    const walker = document.createTreeWalker(
      element,
      NodeFilter.SHOW_TEXT,
      null,
    );

    const textNodes = [];
    while (walker.nextNode()) {
      textNodes.push(walker.currentNode);
    }

    textNodes.forEach((textNode) => {
      const words = textNode.textContent.trim().split(/\s+/);
      const spans = words
        .map(
          (word) =>
            `<span class="word inline-block origin-top-left">${word}</span>`,
        )
        .join(" ");

      const wrapper = document.createElement("span");
      wrapper.innerHTML = spans;
      textNode.parentNode.replaceChild(wrapper, textNode);
    });
  }

  const heading = document.querySelector(".animated-heading");
  if (heading) {
    wrapWordsInSpans(heading);

    gsap.from(heading.querySelectorAll(".word"), {
      opacity: 0,
      y: 35,
      rotate: 4,
      duration: 0.5,
      stagger: {
        each: 0.1,
        amount: 0.6,
      },
      ease: "power2.out",
    });
  }
</script>
<style>
  .animated-heading .word {
    display: inline-block;
    margin-right: 0.25em;
  }
</style>
